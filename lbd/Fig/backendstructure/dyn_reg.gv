// Free usage license, author: Chung-Shu Chen 陳鍾樞
// dot -Tpng dyn_reg.gv -o dyn_reg.png

digraph G {

  graph [fontsize=30 labelloc="t" label="" splines=true overlap=false rankdir = "LR"];
  ratio = auto;
  "state0" [ style = "filled, bold" penwidth = 5 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td bgcolor="grey" align="center" colspan="2"><font color="white">Cpu0MCTargetDesc.cpp</font></td></tr>
    <tr><td align="left" bgcolor="yellow">static MCInstrInfo *createCpu0MCInstrInfo() \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left" bgcolor="yellow" port="r1">  InitCpu0MCInstrInfo(X);</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr><tr><td align="left">...</td></tr>
    <tr><td align="left" bgcolor="green">static MCRegisterInfo *createCpu0MCRegisterInfo(...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left" bgcolor="green">  InitCpu0MCRegisterInfo(X, Cpu0::SW);</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr><tr><td align="left">...</td></tr>
    <tr><td align="left" bgcolor="lightblue">static MCSubtargetInfo *createCpu0MCSubtargetInfo(...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left" bgcolor="lightblue">  createCpu0MCSubtargetInfoImpl(TT, CPU, ArchFS);</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr><tr><td align="left">...</td></tr>
    <tr><td align="left" bgcolor="pink">static MCAsmInfo *createCpu0MCAsmInfo(...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left" bgcolor="pink">  MAI-&gt;addInitialFrameState(Inst);</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr><tr><td align="left">...</td></tr>
    <tr><td align="left" bgcolor="orange">static MCInstPrinter *createCpu0MCInstPrinter(...) \{</td></tr><tr><td align="left" bgcolor="orange"> return new Cpu0InstPrinter(MAI, MII, MRI);</td></tr><tr><td align="left">\}</td></tr><tr><td align="left">...</td></tr>
    <tr><td align="left">extern "C" void LLVMInitializeCpu0TargetMC()\{ </td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">  for (Target *T : \{&#38;TheCpu0Target, &#38;TheCpu0elTarget\})  \{</td></tr><tr><td align="left" bgcolor="pink">    RegisterMCAsmInfoFn X(*T, createCpu0MCAsmInfo);</td></tr><tr><td align="left" bgcolor="yellow">    TargetRegistry::RegisterMCInstrInfo(*T, createCpu0MCInstrInfo);</td></tr><tr><td align="left" bgcolor="green">    TargetRegistry::RegisterMCRegInfo(*T, createCpu0MCRegisterInfo);</td></tr><tr><td align="left" bgcolor="lightblue">    TargetRegistry::RegisterMCSubtargetInfo(*T, createCpu0MCSubtargetInfo);</td></tr><tr><td align="left" bgcolor="orange">    TargetRegistry::RegisterMCInstPrinter(*T, createCpu0MCInstPrinter);</td></tr><tr><td align="left">  \}</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr>
    </table>> ];
  "state2" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td bgcolor="grey" align="center" colspan="2"><font color="white">Cpu0GenInstrInfo.inc</font></td></tr><tr><td align="left" bgcolor="yellow" port="r0">static inline void InitCpu0MCInstrInfo((...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">  II-&gt;InitMCSubtargetInfo(TT, CPU, FS, Cpu0FeatureKV, ...);</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr></table>> ];
  "state3" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td bgcolor="grey" align="center" colspan="2"><font color="white">Cpu0GenRegisterInfo.inc</font></td></tr><tr><td align="left" bgcolor="green" port="r0">static inline void InitCpu0MCRegisterInfo(...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">  RI-&gt;InitMCRegisterInfo(Cpu0RegDesc, ...);</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr></table>> ];
  "state4" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td bgcolor="grey" align="center" colspan="2"><font color="white">Cpu0GenSubtargetInfo.inc</font></td></tr><tr><td align="left" bgcolor="lightblue" port="r0">static inline MCSubtargetInfo *createCpu0MCSubtargetInfoImpl(...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">\}</td></tr></table>> ];
  "state5" [ style = "filled" penwidth = 1 fillcolor = "pink" fontname = "Courier New" shape = "Mrecord" label ="MCAsmInfo.h" ];
  "state6" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label =<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td bgcolor="grey" align="center" colspan="2"><font color="white">Cpu0InstPrinter.h</font></td></tr><tr><td align="left" bgcolor="orange" port="r0">Cpu0InstPrinter(...) \{</td></tr><tr><td align="left">  ...</td></tr><tr><td align="left">  : MCInstPrinter(MAI, MII, MRI) \{\}</td></tr></table>> ];
  
  "state11" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label ="Cpu0InstrInfo.td" ];
  "state12" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label ="Cpu0RegisterInfo.td" ];
  "state13" [ style = "filled" penwidth = 1 fillcolor = "white" fontname = "Courier New" shape = "Mrecord" label ="Cpu0.td" ];
    
  state0 -> state2 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "opcode infomation" ];
  state0 -> state3 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "register" ];
  state0 -> state4 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "subtarget" ];
  state0 -> state5 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "asm inheritance" ];
  state0 -> state6 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "instruction object" ];
  
  state2 -> state11 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "" ];
  state3 -> state12 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "" ];
  state4 -> state13 [ penwidth = 2 fontsize = 14 fontcolor = "black" label = "" ];
}